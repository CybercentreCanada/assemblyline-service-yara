rule cyberark_Stealing_Service_Credentials_registry_keys {

	meta:
		version = "1"
		description = "https://www.cyberark.com/blog/cyberark-labs-research-stealing-service-credentials-achieve-full-domain-compromise/"
		source = "CCCS"
		category = "technique"
		technique = "Steal Service Credential"

	condition:
		al_dynamic_registry_key matches /.*Security\\Policy\\Secrets\\SC.*/i and al_dynamic_registry_key matches /.*CurrentControlSet\\Services.*/i
}

rule persistence_msconfig_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through msconfig"
		source = "CCCS"
		category = "technique"
		technique = "persistence:MSconfig Registry"

	condition:
		al_dynamic_registry_key matches /.*Microsoft\\Windows\\CurrentVersion\\Run\\msconfig.*/i
}

rule persistence_run_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through run registry"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Run resgistry"

	condition:
		al_dynamic_registry_key matches /.*\\software\\microsoft\\windows\\currentversion\\run.*/i
}

rule persistence_session_manager_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through session manager"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Session Manager Registry"

	condition:
		al_dynamic_registry_key matches /.*CurrentControlSet\\Control\\Session Manager\\BootExecute.*/i
}

rule persistence_runservices_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through Run Service Once"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Run Service Registry"

	condition:
		al_dynamic_registry_key matches /.*Microsoft\\Windows\\CurrentVersion\\RunServicesOnce.*/i
}

rule persistence_winlogon_notify_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through winlogon notify"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Winlogon Notify"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\Winlogon\\Notify.*/i
}

rule persistence_winlogon_userinit_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through winlogon userinit"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Winlogon Userinit"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\Winlogon\\Userinit.*/i
}

rule persistence_winlogon_shell_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through winlogon shell"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Winlogon Shell"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\Winlogon\\Shell.*/i
}

rule persistence_shellservice_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through shell service delay load"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Winlogon Shell Service"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\ShellServiceObjectDelayLoad.*/i
}

rule persistence_windows_load_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file load registry key"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Windows Load Registry"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\Windows\\load.*/i
}

rule persistence_shared_task_sched_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through shared task scheduler"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Shared Task Scheduler"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\Explorer\\SharedTaskSched.*/i
}

rule persistence_explorer_run_registry_key {

	meta:
		version = "1"
		description = "Possible persistence mechanism in file through explorer run"
		source = "CCCS"
		category = "technique"
		technique = "persistence:Explorer Run"

	condition:
		al_dynamic_registry_key matches /.*CurrentVersion\\policies\\Explorer\\Run.*/i
}

rule Neo23x0_common_malware_dropped_filenames_Appdata {

	meta:
		version = "1"
		description = "Common location and extension for dropped files. https://github.com/Neo23x0/signature-base/blob/50f14d7d1def5ee1032158af658a5c0b82fe50c9/iocs/filename-iocs.txt"
		source = "CCCS"
		category = "technique"
		technique = "Drops files (common locations)"

	condition:
		al_file_path matches /.*AppData[\\%]+[\w]+\.exe/i or al_dynamic_process_file_name matches /.*AppData[\\%]+[\w]+\.exe/i
}

rule Neo23x0_common_malware_dropped_filenames_Temp {

	meta:
		version = "1"
		description = "Common location and extension for dropped files. https://github.com/Neo23x0/signature-base/blob/50f14d7d1def5ee1032158af658a5c0b82fe50c9/iocs/filename-iocs.txt"
		source = "CCCS"
		category = "technique"
		technique = "Drops files (common locations)"

	condition:
		al_file_path matches /.*[Tt]emp\\[\w]{1,2}\.(exe|com|scr)/ or al_dynamic_process_file_name matches /.*[Tt]emp\\[\w]{1,2}\.(exe|com|scr)/
}

rule Neo23x0_common_malware_dropped_filenames_C {

	meta:
		version = "1"
		description = "Common location and extension for dropped files. https://github.com/Neo23x0/signature-base/blob/50f14d7d1def5ee1032158af658a5c0b82fe50c9/iocs/filename-iocs.txt"
		source = "CCCS"
		category = "technique"
		technique = "Drops files (common locations)"

	condition:
		al_file_path matches /[Cc]:\\[\w]{1,2}\.(exe|com|scr)/ or al_dynamic_process_file_name matches /[Cc]:\\[\w]{1,2}\.(exe|com|scr)/
}

rule Neo23x0_EXE_NonEXE_Dir1 {

	meta:
		version = "1"
		description = "Executable dropped in non-executable directory. https://github.com/Neo23x0/signature-base/blob/50f14d7d1def5ee1032158af658a5c0b82fe50c9/iocs/filename-iocs.txt"
		source = "CCCS"
		category = "technique"
		technique = "Executable in non-executable location"

	condition:
		al_file_path matches /.*\\(images|img|js|fonts|css|swf|templates|themes|log|error_docs)\\[^\\]{,20}\.(exe|dll)/i or al_dynamic_process_file_name matches /.*\\(images|img|js|fonts|css|swf|templates|themes|log|error_docs)\\[^\\]{,20}\.(exe|dll)/i
}

rule Neo23x0_EXE_NonEXE_Dir2 {

	meta:
		version = "1"
		description = "Executable dropped in non-executable directory. https://github.com/Neo23x0/signature-base/blob/50f14d7d1def5ee1032158af658a5c0b82fe50c9/iocs/filename-iocs.txt"
		source = "CCCS"
		category = "technique"
		technique = "Executable in non-executable location"

	condition:
		al_file_path matches /.*\\(wp-admin|wp-content|wp-includes)\\[^\\]{,20}\.(exe|dll)/i or al_dynamic_process_file_name matches /.*\\(wp-admin|wp-content|wp-includes)\\[^\\]{,20}\.(exe|dll)/i
}

rule UPX_Packer_PE_Section {

	meta:
		version = "1"
		description = "Identifies UPX packer by PE section names"
		source = "CCCS"
		category = "technique"
		technique = "packer:UPX"

	condition:
		al_file_pe_sections_name matches /UPX[0-9]/
}
